# # yaml-language-server: $schema=https://api.cerbos.dev/latest/cerbos/policy/v1/Policy.schema.json
# ---
# apiVersion: api.cerbos.dev/v1
# resourcePolicy:
#   version: "default"

#   resource: content
#   rules:

#   - actions: ["view"]
#     roles:
#     - Content_label_artist_user_digital_audio
#     - Content_distribution_reviewer_digital_audio
#     effect: EFFECT_ALLOW
#     condition:
#       match: &not_top_secret
#         any:
#           of:
#           # Check if there is a security_clearance attribute at all, and if so, if it's top secret
#             - expr: >
#                 ! ("security_clearance" in request.resource.attr)
#             - expr: request.resource.attr.security_clearance != "top_secret"

#   - actions: ["edit"]
#     roles:
#     - Content_label_artist_user_digital_audio
#     effect: EFFECT_ALLOW
#     condition: 
#       match:
#         all:
#           of:
#             - <<: *not_top_secret
#             - expr: request.resource.attr.account_id in request.principal.attr.accounts

#   - actions: ["view", "edit"]
#     roles:
#     - Content_content_manager_performance_neighbouring_rights
#     effect: EFFECT_ALLOW
#     condition:
#       match:
#         all:
#           of:
#             - expr: request.resource.attr.account_id in request.principal.attr.accounts
#             - expr: request.principal.attr.accounts[request.resource.attr.account_id].content_type == request.resource.attr.content_type
  
# # # Example of using a variable for a condition:
# #   - actions: ["view"]
# #     roles:
# #     - internal_employee
# #     effect: EFFECT_ALLOW
# #     condition:
# #       <<: *not_top_secret
