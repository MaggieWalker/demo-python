# yaml-language-server: $schema=https://api.cerbos.dev/latest/cerbos/policy/v1/Policy.schema.json
---
apiVersion: api.cerbos.dev/v1
variables:
  is_vendor_star: P.attr.tenants.exists_one(t, t.account_id == "*")
resourcePolicy:
  version: "default"
  resource: contract
  schemas:
    principalSchema: 
      ref: cerbos:///principal.json
    resourceSchema:
      ref: cerbos:///contract.json

  rules:
  - name: tenant_payee_management_can_manage
    actions: ["view", "edit"]
    roles: ["user"]
    effect: EFFECT_ALLOW
    condition:
      match:
        expr: P.attr.tenants.exists_one(t, t.account_id == R.attr.account_id && t.attachments.exists_one(s, s.role == "Documents_payee_management"))

  - name: vendor_star_contract_admin_can_manage
    actions: ["view", "edit"]
    roles: ["user"]
    effect: EFFECT_ALLOW
    condition:
      match:
        expr: P.attr.tenants.exists_one(t, t.account_id == "*" && t.attachments.exists_one(s, s.role == "Abacus_contract_admin"))

  - name: vendor_star_abacus_can_view
    actions: ["view"]
    roles: ["user"]
    effect: EFFECT_ALLOW
    condition:
      match:
        expr: P.attr.tenants.exists_one(t, t.account_id == "*" && t.attachments.exists_one(s, s.role in ["Abacus_contract_admin", "Abacus_royalties"]))

